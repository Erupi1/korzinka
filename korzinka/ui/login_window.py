from PyQt5.QtWidgets import (QDialog, QVBoxLayout, QLabel, QLineEdit, QPushButton, QMessageBox)
from PyQt5.QtGui import QPixmap
from PyQt5.QtCore import Qt
import os
from db import UserDB, init_db

class LoginWindow(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowTitle('–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É')
        self.setFixedSize(300, 320)
        self.user_db = UserDB()
        self.init_ui()
        self.check_first_user()
        self.user_info = None

    def init_ui(self):
        layout = QVBoxLayout()
        # --- –õ–æ–≥–æ—Ç–∏–ø ---
        logo_label = QLabel()
        logo_path = os.path.join('resources', 'logo.png')
        if os.path.exists(logo_path):
            pixmap = QPixmap(logo_path)
            logo_label.setPixmap(pixmap.scaled(90, 90, Qt.KeepAspectRatio, Qt.SmoothTransformation))
        else:
            logo_label.setText('üõí')
            logo_label.setAlignment(Qt.AlignCenter)
        logo_label.setAlignment(Qt.AlignCenter)
        layout.addWidget(logo_label)
        # --- –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ ---
        title = QLabel('–ö–æ—Ä–∑–∏–Ω–∫–∞')
        title.setAlignment(Qt.AlignCenter)
        title.setStyleSheet('font-size: 20px; font-weight: bold; color: #388e3c;')
        layout.addWidget(title)
        self.label = QLabel('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
        self.label.setAlignment(Qt.AlignCenter)
        layout.addWidget(self.label)
        self.username_edit = QLineEdit()
        self.username_edit.setPlaceholderText('–õ–æ–≥–∏–Ω')
        self.password_edit = QLineEdit()
        self.password_edit.setPlaceholderText('–ü–∞—Ä–æ–ª—å')
        self.password_edit.setEchoMode(QLineEdit.Password)
        self.login_btn = QPushButton('–í–æ–π—Ç–∏')
        self.login_btn.clicked.connect(self.try_login)
        layout.addWidget(self.username_edit)
        layout.addWidget(self.password_edit)
        layout.addWidget(self.login_btn)
        self.setLayout(layout)

    def check_first_user(self):
        users = self.user_db.get_all_users()
        if not users:
            self.label.setText('–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
            self.login_btn.setText('–°–æ–∑–¥–∞—Ç—å')
            self.login_btn.clicked.disconnect()
            self.login_btn.clicked.connect(self.create_admin)

    def create_admin(self):
        username = self.username_edit.text().strip()
        password = self.password_edit.text().strip()
        if not username or not password:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å!')
            return
        try:
            self.user_db.add_user(username, password, 'admin')
            QMessageBox.information(self, '–£—Å–ø–µ—Ö', '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ.')
            self.label.setText('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
            self.login_btn.setText('–í–æ–π—Ç–∏')
            self.login_btn.clicked.disconnect()
            self.login_btn.clicked.connect(self.try_login)
        except Exception as e:
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')

    def try_login(self):
        username = self.username_edit.text().strip()
        password = self.password_edit.text().strip()
        if not username or not password:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å!')
            return
        user = self.user_db.authenticate(username, password)
        if user:
            self.user_info = user
            self.accept()
        else:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!') 